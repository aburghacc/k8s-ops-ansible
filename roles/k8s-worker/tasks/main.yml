- name: install required pacakges
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - socat
    - conntrack
    - ipset

- name: download kubernetes worker components
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{kubernetes_version}}/bin/linux/amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: kubernetes
    group: kubernetes
    mode: 0750
  with_items:
    - kubelet
    - kube-proxy
    - kubectl

- name: download runc
  get_url:
    url: https://github.com/opencontainers/runc/releases/download/v{{runc_version}}/runc.amd64
    dest: /usr/local/bin/runc
    owner: kubernetes
    group: kubernetes
    mode: 0750

- name: download crictl
  unarchive:
    src: https://github.com/kubernetes-sigs/cri-tools/releases/download/v{{critools_version}}/crictl-v{{critools_version}}-linux-amd64.tar.gz
    dest: /usr/local/bin
    remote_src: yes
    creates: /usr/local/bin/crictl
    owner: root
    group: root
    mode: 0750

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /opt/cni
    - /opt/cni/bin
    - /opt/cni/net.d
    - /var/lib/kubelet
    - /var/lib/kube-proxy
    - /var/lib/kubernetes
    - /var/run/kubernetes
    - /etc/containerd

- name: download cni-plugins
  unarchive:
    src: https://github.com/containernetworking/plugins/releases/download/v{{cniplugins_version}}/cni-plugins-amd64-v{{cniplugins_version}}.tgz
    dest: /opt/cni/bin/
    remote_src: yes
    creates: /opt/cni/bin/flannel

- name: download containerd
  unarchive:
    src: https://github.com/containerd/containerd/releases/download/v{{containerd_version}}/containerd-{{containerd_version}}.linux-amd64.tar.gz
    dest: /
    remote_src: yes
    creates: /bin/containerd

- name: copy containerd configuration
  copy:
    src: files/config.toml
    dest: /etc/containerd/config.toml
  notify:
    - restart containerd service

- name: create containerd service
  copy:
    src: files/containerd.service
    dest: /etc/systemd/system/containerd.service
    mode: 0644
  notify:
    - reload systemd configs
    - restart containerd service

- name: copy kubelet certificates
  copy:
    src: "{{pki_directory}}/{{ inventory_hostname }}{{item}}"
    dest: "/var/lib/kubelet/{{ inventory_hostname }}{{item}}"
    owner: kubernetes
    group: kubernetes
    mode: 0640
  with_items:
    - "-key.pem"
    - ".pem"

- name: copy kubelet configuration
  copy:
    src: "{{cfg_directory}}/{{ inventory_hostname }}.kubeconfig"
    dest: "/var/lib/kubelet/kubeconfig"
    owner: kubernetes
    group: kubernetes
    mode: 0640

- name: copy ca
  copy:
    src: "{{pki_directory}}/ca.pem"
    dest: "/var/lib/kubernetes/ca.pem"
    owner: kubernetes
    group: kubernetes
    mode: 0640

- name: create kubelet resolv.conf
  template:
    src: templates/resolvkube.conf.j2
    dest: /etc/resolvkube.conf
    owner: kubernetes
    group: kubernetes
    mode: 0640    

- name: create kubelet configuration
  template:
    src: templates/kubelet-config.yaml.j2
    dest: /var/lib/kubelet/kubelet-config.yaml
    owner: kubernetes
    group: kubernetes
    mode: 0640

- name: create kubelet service
  template:
    src: templates/kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service
    mode: 0644
  notify:
    - reload systemd configs
    - restart kubelet service

- name: copy kube-proxy kubeconfig
  copy:
    src: "{{cfg_directory}}/kube-proxy.kubeconfig"
    dest: "/var/lib/kube-proxy/kubeconfig"
    owner: kubernetes
    group: kubernetes
    mode: 0640

- name: copy kube-proxy configuration
  copy:
    src: files/kube-proxy-config.yaml
    dest: /var/lib/kube-proxy/kube-proxy-config.yaml
    owner: kubernetes
    group: kubernetes
    mode: 0640

- name: create kube-proxy service
  template:
    src: templates/kube-proxy.service.j2
    dest: /etc/systemd/system/kube-proxy.service
    mode: 0644
  notify:
    - reload systemd configs
    - restart kube-proxy service

- name: Remove swapfile from /etc/fstab
  mount:
    path: none
    fstype: swap
    state: absent

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: enable kubernetes worker services
  systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
    daemon_reload: yes
  with_items:
    - containerd
    - kubelet
    - kube-proxy
